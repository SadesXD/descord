const { eventMessage } = require("../../utils/utils");

module.exports = {
  channelCreate: eventMessage(["channel"]),
  channelDelete: eventMessage(["channel"]),
  channelPinsUpdate: eventMessage(["channel", "time"]),
  channelUpdate: eventMessage(["oldChannel", "newChannel"]),
  debug: eventMessage(["info"]),
  emojiCreate: eventMessage(["emoji"]),
  emojiDelete: eventMessage(["emoji"]),
  emojiUpdate: eventMessage(["oldEmoji", "newEmoji"]),
  error: eventMessage(["error"]),
  guildBanAdd: eventMessage(["guild", "user"]),
  guildBanRemove: eventMessage(["guild", "user"]),
  guildCreate: eventMessage(["guild"]),
  guildDelete: eventMessage(["guild"]),
  guildIntegrationsUpdate: eventMessage(["guild"]),
  guildMemberAdd: eventMessage(["member"]),
  guildMemberAvailable: eventMessage(["member"]),
  guildMemberRemove: eventMessage(["member"]),
  guildMembersChunk: eventMessage(["members", "guild", "chunk"]),
  guildMemberSpeaking: eventMessage(["member", "speaking"]),
  guildMemberUpdate: eventMessage(["oldMember", "newMember"]),
  guildUnavailable: eventMessage(["guild"]),
  guildUpdate: eventMessage(["oldGuild", "newGuild"]),
  invalidated: eventMessage(null),
  inviteCreate: eventMessage(["invite"]),
  inviteDelete: eventMessage(["invite"]),
  message: eventMessage(["message"]),
  messageDelete: eventMessage(["message"]),
  messageDeleteBulk: eventMessage(["messages"]),
  messageReactionAdd: eventMessage(["reaction", "user"]),
  messageReactionRemove: eventMessage(["reaction", "user"]),
  messageReactionRemoveAll: eventMessage(["message"]),
  messageReactionRemoveEmoji: eventMessage(["reaction"]),
  messageUpdate: eventMessage(["oldMessage", "newMessage"]),
  presenceUpdate: eventMessage(["oldPresence", "newPresence"]),
  rateLimit: eventMessage(["rateLimitinfo"]),
  ready: eventMessage(null),
  roleCreate: eventMessage(["role"]),
  roleDelete: eventMessage(["role"]),
  roleUpdate: eventMessage(["oldRole", "oldRole"]),
  shardDisconnect: eventMessage(["event", "id"]),
  shardError: eventMessage(["error", "shardID"]),
  shardReady: eventMessage(["id", "unavailableGuilds"]),
  shardReconnecting: eventMessage(["id"]),
  shardResume: eventMessage(["id", "replayedEvents"]),
  typingStart: eventMessage(["channel", "user"]),
  userUpdate: eventMessage(["oldUser", "newUser"]),
  voiceStateUpdate: eventMessage(["oldState", "newState"]),
  warn: eventMessage(["info"]),
  webhookUpdate: eventMessage(["channel"]),
};
